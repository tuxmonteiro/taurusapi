---
execution:
- concurrency: 1000
  hold-for: 5m
  scenario: json_example
  write-xml-jtl: null
modules:
  console:
    disable: true
  final-stats:
    disable: true
provisioning: local
reporting:
- module: final-stats
scenarios:
  json_example:
    headers:
      host: test.com
    modifications:
    - element: KPI Writer
      enabled: false
    requests:
    - jsr223:
      - execute: before
        language: beanshell
        script-text: if (vars.getObject("statsd") == null)
          vars.putObject("statsd", new com.timgroup.statsd.NonBlockingStatsDClient("my.test", "127.0.0.1", 8125));
      - execute: after
        language: beanshell
        script-text: import com.timgroup.statsd.StatsDClient; StatsDClient statsd
          = (StatsDClient) vars.getObject("statsd"); long reqTime = sampler.sample().getTime(); if (reqTime == 0L) reqTime=1L;
          statsd.incrementCounter("http" + sampler.sample().getResponseCode()); statsd.recordExecutionTime("requestTime",
          reqTime); statsd.recordGaugeValue("bytesPerSec", (sampler.sample().getBytes()/reqTime));
      url: http://127.0.0.1:8000
    retrieve-resources: false
settings:
  check-interval: 5s
  default-executor: jmeter

